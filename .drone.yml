kind: pipeline
type: docker
name: internal-tools-pipeline

# Define the build steps
steps:
  # Step 1: Install dependencies and build
  - name: build
    image: node:20-alpine
    commands:
      - npm ci --prefer-offline --no-audit
      - npm run build
    when:
      branch:
        - main
        - develop

  # Step 2: Run tests (if you have any)
  - name: test
    image: node:20-alpine
    commands:
      - npm ci --prefer-offline --no-audit
      - npm test --if-present
    depends_on:
      - build
    when:
      branch:
        - main
        - develop

  # Step 3: Build Docker image
  - name: docker-build
    image: plugins/docker
    settings:
      repo: bxe5056/internal-tools
      tags:
        - latest
        - ${DRONE_COMMIT_SHA:0:8}
      dockerfile: Dockerfile
      context: .
      # Docker Hub authentication (required for pushing)
      username:
        from_secret: docker_username
      password:
        from_secret: docker_token
      # For local registry, uncomment and configure:
      # registry: your-nas-registry:5000
    depends_on:
      - test
    when:
      branch:
        - main

  # Step 4: Deploy to Unraid Server
  - name: deploy-unraid
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: nas_host
      username:
        from_secret: nas_username
      # Use password authentication
      password:
        from_secret: nas_password
      # Alternative: use SSH key instead
      # key:
      #   from_secret: nas_ssh_key
      port: 22
      timeout: 60s
      command_timeout: 300s
      envs:
        - CORE_API_TOKEN
      script:
        # Create deployment directory if it doesn't exist
        - mkdir -p /mnt/user/appdata/internal-tools
        - cd /mnt/user/appdata/internal-tools
        # Create/update environment file
        - echo "CORE_API_TOKEN=$CORE_API_TOKEN" > .env
        - chmod 600 .env
        - chown nobody:users .env
        # Download/update the unraid-docker-compose.yml file
        - |
          echo "Downloading latest docker-compose configuration..."
          if wget -O unraid-docker-compose.yml.tmp https://raw.githubusercontent.com/bxe5056/internal-tools/main/unraid-docker-compose.yml 2>/dev/null || \
             curl -o unraid-docker-compose.yml.tmp https://raw.githubusercontent.com/bxe5056/internal-tools/main/unraid-docker-compose.yml 2>/dev/null; then
            mv unraid-docker-compose.yml.tmp unraid-docker-compose.yml
            echo "Docker compose file updated successfully"
          else
            echo "Failed to download compose file, using existing one if available"
            rm -f unraid-docker-compose.yml.tmp
          fi
        # Pull latest image and handle existing container
        - docker pull bxe5056/internal-tools:latest
        # Stop existing container if it exists (either name)
        - docker stop JobsPrintManager || docker stop internal-tools || true
        - docker rm JobsPrintManager || docker rm internal-tools || true
        # Start with docker-compose
        - docker-compose -f unraid-docker-compose.yml up -d
        # Clean up old images to save space
        - docker image prune -f
    environment:
      CORE_API_TOKEN:
        from_secret: coreAPIToken
    depends_on:
      - docker-build
    when:
      branch:
        - main

# Trigger conditions
trigger:
  branch:
    - main
    - develop
  event:
    - push
    - pull_request

# Required: Define secrets in your Drone settings
# These secrets should be configured in your Drone UI:
# - docker_username (your Docker Hub username: bxe5056)
# - docker_token (your Docker Hub Personal Access Token)
# - nas_host
# - nas_username
# - nas_ssh_key
# - coreAPIToken (your Basic auth token for API calls)
